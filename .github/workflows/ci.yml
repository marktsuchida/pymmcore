name: Build & deploy

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - main
    tags:
      - "v*"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Test ${{ matrix.os }} py${{ matrix.python-version }} np${{ matrix.numpy }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.11", "3.13"]
        os: [ubuntu-latest, windows-latest, macos-latest]
        include:
          - python-version: "3.9"
            os: ubuntu-latest
            numpy: "~=1.25"
          - python-version: "3.10"
            os: ubuntu-latest
            numpy: "~=1.26"
          - python-version: "3.12"
            os: ubuntu-latest
            numpy: ">=2.0.0"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: "14.2"

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          allow-prereleases: true

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[test]
          python -m pip install numpy${{ matrix.numpy }}

      - name: Run tests
        run: pytest -v

  build_wheels:
    if: github.event_name != 'pull_request'
    name: Build wheels on ${{ matrix.os }} ${{ matrix.macos_arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, windows-2022]
        include:
          - os: macos-12
            macos_arch: "x86_64"
          - os: macos-12
            macos_arch: "arm64"

    steps:
      - uses: actions/checkout@v4
        with:
          submodules: "recursive"

      - uses: ilammy/msvc-dev-cmd@v1
        with:
          toolset: "14.2"

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.19
        env:
          CIBW_ARCHS_MACOS: "${{ matrix.macos_arch }}"

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-wheels-${{ matrix.os }}${{ matrix.macos_arch }}
          path: ./wheelhouse/*.whl

  build_sdist:
    name: Build source distribution
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          submodules: "recursive"

      - name: Build sdist
        run: |
          pip install -U pip build
          python -m build --sdist

      - uses: actions/upload-artifact@v4
        with:
          name: artifact-sdist
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    # upload to PyPI on every tag
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')

    # https://docs.pypi.org/trusted-publishers/
    permissions:
      id-token: write # for trusted publishing on PyPi
      contents: write # allows writing releases

    steps:
      - uses: actions/download-artifact@v4
        with:
          pattern: artifact-*
          merge-multiple: true
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1

      - uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          files: "./dist/*"
